<%- include header %>
<style>
.btn {
border: 1px solid gray;
width: 100px;
height: 30px;
font-size: 18px;
cursor: pointer;
}

#embed-captcha {
width: 300px;
margin: 0 auto;
}

.show {
display: block;
}
.hide {
display: none;
}
#notice {
color: red;
}
</style>
<form method="post">
  用户名：<input type="text" name="name"/><br />
  密码：  <input type="password" name="password"/><br />
    <input type="submit" class="btn" id="popup-submit" value="登录"/>
</form>
<div id="popup-captcha"></div>
<!-- 为使用方便，直接使用jquery.js库 -->
<script src="http://code.jquery.com/jquery-1.12.3.min.js"></script>
<!-- 引入封装了failback的接口--initGeetest -->
<script src="http://static.geetest.com/static/tools/gt.js"></script>
<script>

    var handlerPopup = function (captchaObj) {

        $("#popup-submit").click(function () {
            var validate = captchaObj.getValidate();
            if (!validate) {
                alert('请先完成验证！');
                return;
            }
            $.ajax({
                url: "/geetest/validate", // 进行二次验证
                type: "post",
                dataType: "json",
                data: {
                    // 二次验证所需的三个值
                    geetest_challenge: validate.geetest_challenge,
                    geetest_validate: validate.geetest_validate,
                    geetest_seccode: validate.geetest_seccode
                },
                success: function (data) {

                    if (data && (data.status === "success")) {

                        $(document.body).html('<h1>登录成功</h1>');

                    } else {

                        $(document.body).html('<h1>登录失败</h1>');
                    }
                }
            });
        });

        // 弹出式需要绑定触发验证码弹出按钮
        captchaObj.bindOn("#popup-submit");

        // 将验证码加到id为captcha的元素里
        captchaObj.appendTo("#popup-captcha");

        // 更多接口参考：http://www.geetest.com/install/sections/idx-client-sdk.html
    };

    $.ajax({
        // 获取id，challenge，success（是否启用failback）
        url: "/geetest/register?t=" + (new Date()).getTime(), // 加随机数防止缓存
        type: "get",
        dataType: "json",
        success: function (data) {

            // 使用initGeetest接口
            // 参数1：配置参数
            // 参数2：回调，回调的第一个参数验证码对象，之后可以使用它做appendTo之类的事件
            initGeetest({
                gt: data.gt,
                challenge: data.challenge,
                product: "popup", // 产品形式，包括：float，embed，popup。注意只对PC版验证码有效
                offline: !data.success // 表示用户后台检测极验服务器是否宕机，一般不需要关注
            }, handlerPopup);
        }
    });


</script>
<%- include footer %>